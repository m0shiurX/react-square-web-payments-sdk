{"version":3,"file":"google-pay.cjs.js","sources":["../../../src/components/google-pay/google-pay.tsx"],"sourcesContent":["// Dependencies\r\nimport { useState, useRef, useMemo, useEffect, JSX } from 'react';\r\nimport type * as Square from '@square/web-sdk';\r\n\r\n// Internals\r\nimport { useForm } from '~/contexts/form';\r\nimport { useEventListener } from '~/hooks/use-event-listener';\r\nimport { ButtonLoader } from './google-pay.styles';\r\nimport type { GooglePayProps } from './google-pay.types';\r\nimport React from 'react';\r\n\r\n/**\r\n * Renders a Google Pay button to use in the Square Web Payment SDK, pre-styled\r\n * to meet Google's branding guidelines.\r\n *\r\n * **Remember** that you need to set `createPaymentRequest()` in `SquareForm` if\r\n * you going to use this Payment Method\r\n *\r\n * @example\r\n *\r\n * ```tsx\r\n * function App() {\r\n *   return (\r\n *     <SquareForm {...props}>\r\n *       <GooglePay />\r\n *     </SquareForm>\r\n *   );\r\n * }\r\n * ```\r\n */\r\nconst GooglePay = ({\r\n  buttonColor,\r\n  buttonSizeMode = 'fill',\r\n  buttonType = 'long',\r\n  id = 'rswps-google-pay-container',\r\n  ...props\r\n}: GooglePayProps): JSX.Element | null => {\r\n  const [googlePay, setGooglePay] = useState<Square.GooglePay | undefined>(() => undefined);\r\n  const { cardTokenizeResponseReceived, createPaymentRequest, payments } = useForm();\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const options: Square.GooglePayButtonOptions = useMemo(() => {\r\n    const baseOptions = {\r\n      buttonColor,\r\n      buttonSizeMode,\r\n      buttonType,\r\n    };\r\n\r\n    // if a value from options is undefined delete it from the options object\r\n    return Object.keys(baseOptions).reduce((acc: Record<string, unknown>, key) => {\r\n      if (baseOptions[key as keyof typeof baseOptions] !== undefined) {\r\n        acc[key as string] = baseOptions[key as keyof typeof baseOptions];\r\n      }\r\n\r\n      return acc;\r\n    }, {});\r\n  }, [buttonColor, buttonSizeMode, buttonType]);\r\n\r\n  /**\r\n   * Handle the on click of the Google Pay button click\r\n   *\r\n   * @param e An event which takes place in the DOM.\r\n   * @returns The data be sended to `cardTokenizeResponseReceived()` function, or an error\r\n   */\r\n  const handlePayment = async (e: Event) => {\r\n    e.stopPropagation();\r\n\r\n    if (!googlePay) {\r\n      console.warn('Google Pay button was clicked, but no Google Pay instance was found.');\r\n\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const result = await googlePay.tokenize();\r\n\r\n      if (result.status === 'OK') {\r\n        return cardTokenizeResponseReceived(result);\r\n      }\r\n\r\n      let message = `Tokenization failed with status: ${result.status}`;\r\n      if (result?.errors) {\r\n        message += ` and errors: ${JSON.stringify(result?.errors)}`;\r\n\r\n        throw new Error(message);\r\n      }\r\n\r\n      console.warn(message);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!createPaymentRequest) {\r\n      throw new Error('`createPaymentRequest()` is required when using digital wallets');\r\n    }\r\n\r\n    const abortController = new AbortController();\r\n    const { signal } = abortController;\r\n\r\n    const start = async (signal: AbortSignal) => {\r\n      const paymentRequest = payments?.paymentRequest(createPaymentRequest);\r\n\r\n      if (!paymentRequest) {\r\n        throw new Error('`paymentRequest` is required when using digital wallets');\r\n      }\r\n\r\n      try {\r\n        const googlePay = await payments?.googlePay(paymentRequest).then((res) => {\r\n          if (signal?.aborted) {\r\n            return;\r\n          }\r\n\r\n          setGooglePay(res);\r\n\r\n          return res;\r\n        });\r\n\r\n        await googlePay?.attach(`#${id}`, options);\r\n\r\n        if (signal.aborted) {\r\n          await googlePay?.destroy();\r\n        }\r\n      } catch (error) {\r\n        console.error('Initializing Google Pay failed', error);\r\n      }\r\n    };\r\n\r\n    start(signal);\r\n\r\n    return () => {\r\n      abortController.abort();\r\n    };\r\n  }, [createPaymentRequest, payments, options]);\r\n\r\n  useEventListener({\r\n    listener: handlePayment,\r\n    type: 'click',\r\n    element: containerRef.current,\r\n    options: {\r\n      passive: true,\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div {...props} id={id} ref={containerRef}>\r\n      {!googlePay ? <ButtonLoader /> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GooglePay;\r\nexport * from './google-pay.types';\r\n"],"names":["GooglePay","buttonColor","buttonSizeMode","buttonType","id","props","googlePay","setGooglePay","useState","cardTokenizeResponseReceived","createPaymentRequest","payments","useForm","containerRef","useRef","options","useMemo","baseOptions","acc","key","handlePayment","e","result","message","error","useEffect","abortController","signal","paymentRequest","res","useEventListener","React","ButtonLoader"],"mappings":"6QA8BMA,EAAY,CAAC,CACjB,YAAAC,EACA,eAAAC,EAAiB,OACjB,WAAAC,EAAa,OACb,GAAAC,EAAK,6BACL,GAAGC,CACL,IAA0C,CACxC,KAAM,CAACC,EAAWC,CAAY,EAAIC,EAAA,SAAuC,IAAM,EAAS,EAClF,CAAE,6BAAAC,EAA8B,qBAAAC,EAAsB,SAAAC,CAAA,EAAaC,EAAAA,QAAQ,EAC3EC,EAAeC,SAAuB,IAAI,EAE1CC,EAAyCC,EAAAA,QAAQ,IAAM,CAC3D,MAAMC,EAAc,CAClB,YAAAhB,EACA,eAAAC,EACA,WAAAC,CACF,EAGA,OAAO,OAAO,KAAKc,CAAW,EAAE,OAAO,CAACC,EAA8BC,KAChEF,EAAYE,CAA+B,IAAM,SAC/CD,EAAAC,CAAa,EAAIF,EAAYE,CAA+B,GAG3DD,GACN,EAAE,CACJ,EAAA,CAACjB,EAAaC,EAAgBC,CAAU,CAAC,EAQtCiB,EAAgB,MAAOC,GAAa,CAGxC,GAFAA,EAAE,gBAAgB,EAEd,CAACf,EAAW,CACd,QAAQ,KAAK,sEAAsE,EAEnF,MAAA,CAGE,GAAA,CACI,MAAAgB,EAAS,MAAMhB,EAAU,SAAS,EAEpC,GAAAgB,EAAO,SAAW,KACpB,OAAOb,EAA6Ba,CAAM,EAGxC,IAAAC,EAAU,oCAAoCD,EAAO,MAAM,GAC/D,GAAIA,GAAQ,OACV,MAAAC,GAAW,gBAAgB,KAAK,UAAUD,GAAQ,MAAM,CAAC,GAEnD,IAAI,MAAMC,CAAO,EAGzB,QAAQ,KAAKA,CAAO,QACbC,EAAO,CACd,QAAQ,MAAMA,CAAK,CAAA,CAEvB,EAEAC,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI,CAACf,EACG,MAAA,IAAI,MAAM,iEAAiE,EAG7E,MAAAgB,EAAkB,IAAI,gBACtB,CAAE,OAAAC,GAAWD,EA8BnB,OA5Bc,MAAOC,GAAwB,CACrC,MAAAC,EAAiBjB,GAAU,eAAeD,CAAoB,EAEpE,GAAI,CAACkB,EACG,MAAA,IAAI,MAAM,yDAAyD,EAGvE,GAAA,CACItB,MAAAA,EAAY,MAAMK,GAAU,UAAUiB,CAAc,EAAE,KAAMC,GAAQ,CACxE,GAAIF,CAAAA,GAAQ,QAIZ,OAAApB,EAAasB,CAAG,EAETA,CAAA,CACR,EAED,MAAMvB,GAAW,OAAO,IAAIF,CAAE,GAAIW,CAAO,EAErCY,EAAO,SACT,MAAMrB,GAAW,QAAQ,QAEpBkB,EAAO,CACN,QAAA,MAAM,iCAAkCA,CAAK,CAAA,CAEzD,GAEMG,CAAM,EAEL,IAAM,CACXD,EAAgB,MAAM,CACxB,CACC,EAAA,CAAChB,EAAsBC,EAAUI,CAAO,CAAC,EAE3Be,mBAAA,CACf,SAAUV,EACV,KAAM,QACN,QAASP,EAAa,QACtB,QAAS,CACP,QAAS,EAAA,CACX,CACD,EAGEkB,EAAA,cAAA,MAAA,CAAK,GAAG1B,EAAO,GAAAD,EAAQ,IAAKS,CAC1B,EAACP,EAA+B,KAAnByB,EAAA,cAACC,EAAAA,aAAa,IAAA,CAC9B,CAEJ"}